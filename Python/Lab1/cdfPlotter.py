import numpy as np

import matplotlib.pyplot as plt

def plot_cdf(data):
    # Sort the data
    data_sorted = np.sort(data)
    
    # Calculate the CDF values
    cdf = np.arange(1, len(data_sorted) + 1) / len(data_sorted)
    
    # Plot the CDF
    plt.figure(figsize=(8, 4))
    plt.plot(data_sorted, cdf)
    plt.xlabel('Cycle Number')
    plt.ylabel('CDF')
    plt.title('Cumulative Distribution Function (CDF)')
    plt.grid(True)
    plt.savefig("CDF.png")
    plt.show()

# Example usage
data = [95, 95, 426, 95, 95, 426, 95, 95, 95, 95, 95, 95, 95, 426, 95, 95, 426, 95, 95, 
        95, 95, 95, 95, 95, 426, 95, 95, 426, 95, 95, 99, 95, 95, 95, 95, 426, 95, 95, 
        426, 95, 95, 95, 95, 95, 95, 95, 426, 95, 95, 426, 99, 95, 102, 95, 95, 95, 95, 
        426, 95, 95, 426, 95, 95, 95, 95, 95, 95, 95, 426, 95, 95, 426, 99, 95, 95, 102, 
        426, 97, 95, 439, 95, 95, 95, 95, 95, 95, 95, 426, 95, 95, 95, 95, 95, 95, 95, 
        95, 95, 95, 426, 99, 95, 102, 101, 95, 97, 95, 426, 95, 95, 95, 95, 98, 95, 102, 
        426, 97, 95, 426, 95, 95, 95, 95, 95, 95, 95, 426, 95, 95, 426, 95, 95, 95, 95, 
        97, 95, 96, 426, 96, 95, 426, 95, 95, 95, 95, 95, 95, 95, 426, 99, 95, 426, 95, 
        95, 95, 95, 95, 95, 95, 426, 95, 95, 426, 95, 95, 95, 95, 95, 95, 99, 426, 102, 
        95, 428, 95, 95, 95, 95, 95, 95, 95, 426, 95, 95, 426, 95, 95, 95, 95, 95, 95, 97, 
        426, 96, 95, 427, 95, 95, 95, 95, 95, 95, 95, 426, 95, 95, 431, 95, 95, 95, 95, 
        95, 95, 95, 426, 95, 95, 426, 95, 95, 95, 95, 95, 95, 95, 426, 99, 95, 102, 95, 
        95, 95, 95, 95, 95, 95, 426, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 426, 99, 95, 
        96, 95, 95, 95, 95, 95, 95, 95, 426, 95, 95, 95, 95, 95, 95, 95, 95, 95, 97, 426, 
        96, 95, 96, 95, 95, 95, 95, 95, 95, 95, 426, 95, 95, 99, 95, 95, 95, 95, 95, 95, 95, 
        426, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 426, 99, 95, 102, 95, 95, 95, 95, 426, 
        95, 95, 426, 95, 95, 95, 95, 95, 95, 95, 426, 95, 95, 426, 99, 95, 96, 95, 95, 95, 
        95, 426, 95, 95, 426, 95, 95, 95, 95, 95, 95, 95, 426, 95, 97, 426, 96, 95, 96, 95, 
        95, 95, 95, 426, 95, 95, 426, 95, 95, 95, 95, 426, 95, 95, 426, 95, 95, 95, 95, 103, 
        95, 109, 426, 103, 95, 428, 95, 95, 95, 95, 95, 95, 95, 426, 95, 95, 95, 95, 95, 95, 
        95, 95, 95, 97, 426, 96, 95, 96, 95, 95, 95, 95, 95, 95, 95, 426, 95, 95, 95, 95, 95, 
        95, 95, 426, 95, 95, 426, 95, 103, 95, 109, 95, 103, 95, 426, 95, 95, 95, 95, 95, 95, 
        95, 95, 95, 95, 426, 95, 95, 95, 95, 95, 95, 99, 426, 96, 95, 426, 95, 95, 95, 95, 95, 
        95, 95, 426, 95, 95, 426, 95, 95, 95, 95, 97, 95, 96, 426, 96, 95, 426, 95, 95, 95, 
        95, 95, 95, 95, 426, 99, 95, 426, 95, 95, 95, 95, 95, 95, 95, 426, 95, 95, 426, 95, 
        95, 95, 95, 95, 95, 99, 426, 102, 95, 428, 95, 95, 95, 95, 95, 95, 95, 426, 95, 95, 
        426, 95, 95, 95, 95, 95, 95, 97, 426, 96, 95, 427, 95, 95, 95, 95, 95, 95, 95, 426, 
        95, 95, 431, 95, 95, 95, 95, 95, 95, 95, 426, 95, 95, 426, 95, 95, 95, 95, 95, 95, 
        95, 426, 99, 95, 102, 95, 95, 95, 95, 95, 95, 95, 426, 95, 95, 95, 95, 95, 95, 95, 95, 
        95, 95, 426, 99, 95, 96, 95, 95, 95, 95, 95, 95, 95, 426, 95, 95, 95, 95, 95, 95, 95, 
        95, 95, 97, 426, 96, 95, 96, 95, 95, 95, 95, 95, 95, 95, 426, 95, 95, 99, 95, 95, 95, 
        95, 95, 95, 95, 426, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 426, 99, 95, 102, 95, 95, 
        95, 95, 426, 95, 95, 426, 95, 95, 95, 95, 95, 95, 95, 426, 95, 95, 426, 99, 95, 96, 
        95, 95, 95, 95, 426, 95, 95, 426, 95, 95, 95, 95, 95, 95, 95, 426, 95, 97, 426, 96, 
        95, 96, 95, 95, 95, 95, 426, 95, 95, 426, 95, 95, 99, 95, 95, 95, 95, 426, 95, 95, 426, 
        95, 95, 95, 95, 95, 95, 95, 426, 95, 95, 426, 99, 95, 102, 95, 95, 95, 95, 426, 95, 
        95, 426, 95, 95, 95, 95, 95, 95, 95, 426, 95, 95, 426, 99, 95, 96, 95, 95, 95, 95, 426, 
        95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 426, 95, 97, 95, 96, 95, 96, 95, 95, 95, 95, 
        426, 95, 95, 95, 95, 95, 99, 95, 95, 95, 95, 426, 95, 95, 95, 95, 95, 95, 95, 95, 95, 
        95, 426, 95, 95, 95, 99, 95, 102, 95, 95, 95, 95, 426, 95, 95, 95, 95, 95, 95, 95, 95, 
        95, 95, 426, 95, 95, 95, 99, 95, 96, 95, 95, 95, 95, 426, 95, 95, 95, 95, 95, 95, 95, 
        95, 95, 95, 426, 95, 97, 95, 96, 95, 96, 95, 426, 95, 95, 426, 95, 95, 95, 95, 95, 99, 
        95, 426, 95, 95, 426, 95, 95, 95, 95, 95, 95, 95, 426, 95, 95, 426, 95, 95, 95, 99, 95, 
        102, 95, 426, 95, 95, 426, 95, 95, 95, 95, 95, 95, 95, 426, 95, 95, 426, 95, 95, 95, 
        99, 95, 96, 95, 426, 95, 95, 426, 95, 95, 95, 95, 95, 95, 95, 426, 95, 95, 426, 95, 97, 
        95, 96, 95, 96, 95, 426, 95, 95, 426, 95, 95, 95, 95, 95, 99, 95, 426, 95, 95, 426, 97, 
        95, 95, 95, 99, 95, 97, 95, 108, 95, 426, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 426, 
        95, 95, 95, 95, 95, 95, 99, 426, 102, 95, 426, 95, 95, 95, 95, 95, 95, 95, 426, 95, 95, 
        426, 95, 95, 95, 95, 95, 95, 99, 426, 96, 95, 427, 95, 95, 95, 95, 95, 95, 95, 426, 95, 
        95, 430, 95, 95, 95, 95, 95, 95, 95, 426]
data = np.array(data) - 54.9
print(np.average(data))
plot_cdf(data)